import streamlit as st
import pandas as pd
import datetime

st.set_page_config(page_title="Quiz SOU+", layout="centered")

# Novo texto de introduÃ§Ã£o
st.title("SOU+ Ã© a Energia Que Move Cada Um de NÃ³s")
st.write("""
Todos nÃ³s temos algo especial que nos move: uma forma Ãºnica de pensar, agir ou se conectar.\n
Cada cor dÃ¡ visibilidade Ã s diferentes forÃ§as que compÃµem cada pessoa.\n
O SOU+ Ã© a nossa forma de mapear essas forÃ§as, de um jeito leve, e integrado a toda experiÃªncia do Big Bang deste ano.\n
E aÃ­? Prontos para descobrir o seu perfil SOU+?\n
Quem Ã© vocÃª no game?
""")

nome = st.text_input("Digite seu nome")

# DicionÃ¡rio de alternativas para perfis (exemplo com 3 perguntas)
tipo_por_resposta = {
    # Pergunta 1
    "Analisa e planeja a soluÃ§Ã£o": "Geek",
    "Testa na prÃ¡tica e ajusta no caminho": "Aventura",
    "Pede ajuda ou troca ideias": "ConexÃ£o",
    "Busca uma forma criativa e diferente de resolver": "Arte",

    # Pergunta 2
    "MatemÃ¡tica ou ciÃªncias exatas": "Geek",
    "EducaÃ§Ã£o fÃ­sica": "Aventura",
    "HistÃ³ria ou sociologia": "ConexÃ£o",
    "Artes ou literatura": "Arte",

    # Pergunta 3
    "Dados e lÃ³gica": "Geek",
    "IntuiÃ§Ã£o e impulso": "Aventura",
    "Conversar e alinhar com pessoas": "ConexÃ£o",
    "Imaginar cenÃ¡rios criativos": "Arte",
}

# Lista de perguntas (exemplo)
perguntas = [
    ("Quando aparece um desafio novo, vocÃª:", [
        "Analisa e planeja a soluÃ§Ã£o",
        "Testa na prÃ¡tica e ajusta no caminho",
        "Pede ajuda ou troca ideias",
        "Busca uma forma criativa e diferente de resolver"
    ]),
    ("Qual dessas matÃ©rias da escola mais te atraÃ­a?", [
        "MatemÃ¡tica ou ciÃªncias exatas",
        "EducaÃ§Ã£o fÃ­sica",
        "HistÃ³ria ou sociologia",
        "Artes ou literatura"
    ]),
    ("Para tomar uma decisÃ£o, vocÃª prefere:", [
        "Dados e lÃ³gica",
        "IntuiÃ§Ã£o e impulso",
        "Conversar e alinhar com pessoas",
        "Imaginar cenÃ¡rios criativos"
    ])
]

pontuacoes = {"Geek": 0, "Aventura": 0, "ConexÃ£o": 0, "Arte": 0}

for i, (pergunta, alternativas) in enumerate(perguntas):
    resposta = st.radio(pergunta, alternativas, key=f"pergunta_{i}")
    tipo = tipo_por_resposta[resposta]
    pontuacoes[tipo] += 1

if st.button("Ver meu perfil"):
    perfil_principal = max(pontuacoes, key=pontuacoes.get)
    total = sum(pontuacoes.values())

    descricao = {
        "Geek": "ğŸ’™ Sua cor Ã© o Azul\n\nO cÃ©rebro do time. AnalÃ­tico, curioso, resolve problemas e domina o conhecimento.",
        "Aventura": "ğŸ’š Sua cor Ã© o Verde\n\nO desbravador. Ama movimento, desafios fÃ­sicos e ambientes inesperados.",
        "ConexÃ£o": "ğŸ–§ Sua cor Ã© o Rosa\n\nA base do time. Une pessoas, cuida do grupo e garante colaboraÃ§Ã£o.",
        "Arte": "ğŸ’› Amarelo\n\nA alma criativa. Expressivo, contagia com energia, empolgaÃ§Ã£o e dÃ¡ ritmo Ã s experiÃªncias."
    }

    emoji = {"Geek": "ğŸ’™", "Aventura": "ğŸ’š", "ConexÃ£o": "ğŸ–§", "Arte": "ğŸ’›"}[perfil_principal]

    st.subheader(f"SOU+ {perfil_principal} {emoji}")
    st.write(descricao[perfil_principal])
    st.write("DistribuiÃ§Ã£o:")

    for tipo, valor in pontuacoes.items():
        percentual = round((valor / total) * 100)
        st.write(f"- {tipo}: {percentual}%")

    if nome:
        data = pd.DataFrame([{ "nome": nome, "data": datetime.datetime.now(), **pontuacoes }])
        try:
            existentes = pd.read_csv("respostas.csv")
            data = pd.concat([existentes, data], ignore_index=True)
        except:
            pass
        data.to_csv("respostas.csv", index=False)
