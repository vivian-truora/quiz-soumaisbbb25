import streamlit as st
import random
import datetime
import gspread
from google.oauth2 import service_account
import pandas as pd


# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Quiz SOU+ Big Bang Rio", layout="centered")
st.title("üéÆ Descubra seu perfil SOU+ Big Bang Rio")


st.markdown("""
**SOU+ √© a Energia Que Move Cada Um de N√≥s**
Todos n√≥s temos algo especial que nos move: uma forma √∫nica de pensar, agir ou se conectar.
Cada cor d√° visibilidade √†s diferentes for√ßas que comp√µem cada pessoa.


O SOU+ √© a nossa forma de mapear essas for√ßas, de um jeito leve, e integrado a toda experi√™ncia do Big Bang deste ano.
**E a√≠? Pronto(a) para descobrir o seu perfil SOU+?**
""")


# Nome do participante
nome = st.text_input("Digite seu nome completo")


# Perguntas
quiz_perguntas = [
("Quando aparece um desafio novo, voc√™:", [
("Busca uma forma criativa e diferente de resolver", "Arte"),
("Pede ajuda ou troca ideias", "Conex√£o"),
("Testa na pr√°tica e ajusta no caminho", "Aventura"),
("Analisa e planeja a solu√ß√£o", "Geek")]),


("Qual dessas mat√©rias da escola mais te atra√≠a?", [
("Hist√≥ria ou sociologia", "Conex√£o"),
("Educa√ß√£o f√≠sica", "Aventura"),
("Artes ou literatura", "Arte"),
("Matem√°tica ou ci√™ncias exatas", "Geek")]),


("Para tomar uma decis√£o, voc√™ prefere:", [
("Imaginar cen√°rios criativos", "Arte"),
("Conversar e alinhar com pessoas", "Conex√£o"),
("Intui√ß√£o e impulso", "Aventura"),
("Dados e l√≥gica", "Geek")]),


("Diante de uma tarefa dif√≠cil, voc√™:", [
("Reinventa o jeito de fazer", "Arte"),
("Busca parceria para compartilhar", "Conex√£o"),
("Vai tentando at√© dar certo", "Aventura"),
("Divide em etapas l√≥gicas", "Geek")]),


("Seu maior talento est√° em:", [
("Criar la√ßos fortes com pessoas", "Conex√£o"),
("Superar desafios f√≠sicos", "Aventura"),
("Ter ideias originais", "Arte"),
("Resolver problemas", "Geek")]),


("Se fosse jogar um game, voc√™ escolheria:", [
("Criativo/sandbox", "Arte"),
("De corrida/a√ß√£o", "Aventura"),
("Multiplayer cooperativo", "Conex√£o"),
("De estrat√©gia/puzzle", "Geek")]),


("Num imprevisto, voc√™ costuma:", [
("Improvisar com criatividade", "Arte"),
("Calcular op√ß√µes antes de agir", "Geek"),
("Agir r√°pido e corrigir depois", "Aventura"),
("Procurar apoio das pessoas", "Conex√£o")]),


("Quando tem tempo livre, voc√™ prefere:", [
("Ir a um show, cinema ou oficina criativa", "Arte"),
("Sair com amigos/fam√≠lia", "Conex√£o"),
("Praticar um esporte", "Aventura"),
("Ler ou estudar algo novo", "Geek")]),


("Seu hobby ideal √©:", [
("Pintura, m√∫sica ou dan√ßa", "Arte"),
("Surf, corrida ou trekking", "Aventura"),
("Montar quebra-cabe√ßas, xadrez ou programa√ß√£o", "Geek"),
("Jantar com amigos, jogos de grupo", "Conex√£o")]),


("Se tivesse que montar uma barraca de camping, voc√™:", [
("Chamaria amigos para montar juntos", "Conex√£o"),
("Improvisaria com o que tivesse", "Arte"),
("Leria o manual e organizaria", "Geek"),
("Montaria tentando na pr√°tica", "Aventura")]),


("Em uma roda de conversa, voc√™ costuma ser:", [
]
pontuacoes = {"Geek": 0, "Aventura": 0, "Conex√£o": 0, "Arte": 0}
respostas = []

for idx, (pergunta, alternativas) in enumerate(quiz_perguntas):
    random.shuffle(alternativas)
    resposta = st.radio(pergunta, [a[0] for a in alternativas], key=f"pergunta_{idx}")
    perfil = next(p for txt, p in alternativas if txt == resposta)
    pontuacoes[perfil] += 1
    respostas.append((pergunta, resposta))

# Verifica empate
max_score = max(pontuacoes.values())
empatados = [p for p, v in pontuacoes.items() if v == max_score]

if len(empatados) > 1:
    st.markdown("### ‚ùì Houve um empate! Responda a pergunta de desempate:")
    desempate = st.radio("Com qual dessas atitudes voc√™ mais se identifica:", [
        ("Reinventa o jeito de fazer", "Arte"),
        ("Busca parceria para compartilhar", "Conex√£o"),
        ("Vai tentando at√© dar certo", "Aventura"),
        ("Divide em etapas l√≥gicas", "Geek")
    ], key="desempate")
    pontuacoes[[p for txt, p in [("Reinventa o jeito de fazer", "Arte"), ("Busca parceria para compartilhar", "Conex√£o"), ("Vai tentando at√© dar certo", "Aventura"), ("Divide em etapas l√≥gicas", "Geek")] if txt == desempate][0]] += 1

# Resultado final
if st.button("Ver meu perfil"):
    total = sum(pontuacoes.values())
    porcentagens = {p: round((v/total)*100) for p,v in pontuacoes.items()}
    perfil_principal = max(pontuacoes, key=pontuacoes.get)

    descricoes = {
        "Geek": "‚ú® **SOU+ Geek**  \nüíô Sua cor √© o Azul  \nO c√©rebro do time. Anal√≠tico, curioso, resolve problemas e domina o conhecimento.",
        "Aventura": "‚ú® **SOU+ Aventura**  \n üíö Sua cor √© o Verde  \nO desbravador. Ama movimento, desafios f√≠sicos e ambientes inesperados.",
        "Conex√£o": "‚ú® **SOU+ Conex√£o**  \n ü©∑ Sua cor √© o Rosa  \nA base do time. Une pessoas, cuida do grupo e garante colabora√ß√£o.",
        "Arte": "‚ú® **SOU+ Criativo**  \n üíõ Sua cor √© o Amarelo  \nA alma criativa. Expressivo, contagia com energia, empolga√ß√£o e d√° ritmo √†s experi√™ncias."
    }

    st.markdown(descricoes[perfil_principal])

    st.markdown("### Seus percentuais:")
    for p in ["Geek", "Aventura", "Conex√£o", "Arte"]:
        st.write(f"{p}: {porcentagens[p]}%")

    # Salvar no Google Sheets via Streamlit Secrets
    try:
        escopo = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
        credenciais = ServiceAccountCredentials.from_json_keyfile_dict(st.secrets["gcp_service_account"], escopo)
        cliente = gspread.authorize(credenciais)
        planilha = cliente.open("Respostas SOU+ BBB25")
        aba = planilha.sheet1
        aba.append_row([
            nome,
            str(datetime.datetime.now()),
            perfil_principal,
            porcentagens["Geek"], porcentagens["Aventura"], porcentagens["Conex√£o"], porcentagens["Arte"]
        ])
    except Exception as e:
        st.warning(f"Erro ao salvar na planilha: {e}")
